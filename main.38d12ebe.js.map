{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","reject","addEventListener","domEvent","type","nodeName","id","printMessage","message","notification","document","createElement","textContent","classList","add","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BJ,EAAQK,iBAAiBJ,EAAW,SAACK,GAC/BL,IAAcK,EAASC,MAI3BJ,EACE,UAAUF,OAAAA,EACLD,qBAAAA,GAAAA,OAAAA,EAAQQ,SAAiBR,UAAAA,OAAAA,EAAQS,GAFjC,UAQb,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAeC,SAASC,cAAc,OAE5CF,EAAaG,YAAcJ,EAC3BC,EAAaI,UAAUC,IAAI,WAC3BJ,SAASK,KAAKC,OAAOP,IAGvBQ,OAAOC,QAAU,CACftB,QAAAA,EACAW,aAAAA","file":"main.38d12ebe.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve, reject) => {\n    element.addEventListener(eventName, (domEvent) => {\n      if (eventName !== domEvent.type) {\n        return;\n      }\n\n      resolve(\n        `It was ${eventName} on the element: `\n        + `${element.nodeName}, id: ${element.id}.`\n      );\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const notification = document.createElement('div');\n\n  notification.textContent = message;\n  notification.classList.add('message');\n  document.body.append(notification);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}